import { writeFile } from 'fs';
import { objReduce } from '../util';
import { typeMappingsByGeneric } from './type-mappings';
export function schemaStructPropToTypeScript(state, prop, name) {
    return state + `  ${name}: ${typeMappingsByGeneric[prop.type].ts};
`;
}
export function scPropToInterface(state, scProp, name) {
    return state + `export interface ${name} {
${objReduce(scProp.struct, schemaStructPropToTypeScript, '')}}

`;
}
export function schemaToTypeScript(schema) {
    return objReduce(schema, scPropToInterface, '');
}
export function writeTsFromSchema(fullPath, schema) {
    return new Promise((resolve, reject) => {
        writeFile(fullPath, schemaToTypeScript(schema), (err) => {
            if (err) {
                reject(err);
            }
            else {
                resolve();
            }
        });
    });
}
//# sourceMappingURL=schema-to-typescript.js.map