import { QueryStream } from '../../table';
import { Observable } from 'rxjs/Observable';
import 'rxjs/add/operator/toArray';
export interface InfoSchemaTable {
    table_name: string;
}
export declare const listTables: (query: QueryStream<InfoSchemaTable>) => Observable<InfoSchemaTable>;
export interface InfoSchemaColumn {
    column_name: string;
    table_name: string;
    data_type: string;
    character_maximum_length: number;
    is_nullable: string;
    numeric_precision: number;
}
export declare const listColumns: (query: QueryStream<InfoSchemaColumn>, table: string) => Observable<InfoSchemaColumn>;
export declare const listAllColumns: (query: QueryStream<InfoSchemaColumn>) => Observable<InfoSchemaColumn>;
export declare const createTable: (query: QueryStream<any>, tableName: string, columnsAndConstraints: string[]) => Observable<any[]>;
export declare const varChar: (size: number) => string;
export declare const foreignKey: (column: string, key: string) => string;
export declare const unique: (columns: string[]) => string;
export declare const primaryKey: (columns: string[]) => string;
export declare const foreignKeyComposite: (columns: string[], references: string[], otherTable: string) => string;
export declare const alterTable: (table: string) => string;
export declare const addColumn: (table: string) => string;
export declare const alterColumn: (table: string, column: string) => string;
export declare const setNull: (table: string, column: string) => string;
export declare const setNotNull: (table: string, column: string) => string;
