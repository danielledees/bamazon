"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const pg_1 = require("pg");
const util_1 = require("./util");
/**
 * @typedef {{ toJs: function(...), toSql: function(...) }} ColumnValidator
 */
exports.dbName = process.env.SQLT_PG_DB || 'default_database';
/** @todo propagate this through from 0 */
const config = {
    user: process.env.SQLT_PG_USER || 'default_database_user',
    database: exports.dbName,
    password: process.env.SQLT_PG_PASS || 'this-is-dev',
    host: process.env.SQLT_PG_HOST || 'localhost',
    port: process.env.SQLT_PG_PORT || 5432,
    max: 30,
    idleTimeoutMillis: 30000,
    connectionTimeoutMillis: 2000,
};
let globalPool;
function pool() {
    if (!globalPool) {
        globalPool = new pg_1.Pool(config);
        globalPool.on('error', (err) => {
            // if an error is encountered by a client while it sits idle in the pool
            // the pool itself will emit an error event with both the error and
            // the client which emitted the original error
            util_1.error('idle client error', err.message);
        });
        // validate tables on init
    }
    return globalPool;
}
exports.pool = pool;
//# sourceMappingURL=db-connect.js.map